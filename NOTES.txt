Setting up the MEL

	polyTorus -r 1 -sr 0.5 -tw 0 -sx 50 -sy 50 -ax 0 1 0 -cuv 1 -ch 1;
	string $clusterStr[] = `deformer -type "basicSkinCluster"`;
	print($clusterStr);

-this little sequence of commands will make a torus, make a skin cluster attached, and hand you the name of said cluster

	ls -sl

-this will list the selected stuff in order of selection. you can do:
	
	string $selectedNodes[] = `ls -sl`;
	print($selectedNodes[0]);

	string $selectedNodes[] = `ls -sl`;
	for ($i = 0; $i < size($selectedNodes); $i++) {
	    print("type: " + `objectType $selectedNodes[$i]`);
	    print(" name: ");
	    print($selectedNodes[$i]);
	    print("\n");    
	}

-this is how you walk over the joints of a skeleton

	listRelatives -ad "joint1"; //-> returns a string array



**********************************************************************************
MAYA INTERACTION NOTES
-ok. skinning is a type of DEFORMER using SKIN CLUSTERS
-with all DEFORMERS you can set the envelope, which is like how much the deformer is actually applied
	-this is in deformer attributes
	-presumably this is what the maya documentation means by percent command
-

********************************************************************************
-we'll need a main -> doyyyy
-we'll need a gl viewer wrapper -> to be reused a lot later? -> look at GL code
-we'll need a scene to manage drawables
-we'll need a drawable subclass
	-GL buffers
	-get vertex buffer
	-get index buffer
	-get normal buffer

-we'll include a dedicated mesh drawable class
-HRBF draw will be a subclass of this
	-but HRBF itself will have to be a separate class

-HRBF segment will voxelize and push all the cubes to GL? is that crazy?
-maybe we'll do points for now... less taxing on the GPU?

TODO
-set up a starter repo using the 563 GL basecode (skeleton)
	-get GLFW working
	-get a basic drawable cube class working -> refer back to 460 for classing, subclassing
-get a basic mesh loader going
-think about how to visualize the HRBF
	-right now I'm thinking voxels